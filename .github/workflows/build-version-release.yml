name: Build, Version and Release

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npm test --if-present

      - run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - id: bump
        run: |
          npm version patch -m 'chore\(release\): %s [skip ci]'
          echo "new_version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - run: git push --follow-tags

  build:
    needs: version
    strategy:
      matrix:
        include:
          - os: windows-latest
            script: win
            ext: exe
          - os: macos-latest
            script: mac
            ext: dmg
          - os: ubuntu-latest
            script: linux
            ext: AppImage
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npm test --if-present

      - name: Package portable build
        run: npm run package:${{ matrix.script }}

      - name: Build installer
        run: npm run dist:${{ matrix.script }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.script }}
          path: |
            Soulbound-*-${{ matrix.script }}-x64/*
            dist/*.${{ matrix.ext }}
            dist/latest*.yml

  release:
    needs: [version, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.version.outputs.new_version }}
          name: "Soulbound v${{ needs.version.outputs.new_version }}"
          artifacts: artifacts/**
          draft: false
          prerelease: false
          generateReleaseNotes: true